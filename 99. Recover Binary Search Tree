/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    TreeNode* prev = NULL;
    TreeNode* f = NULL;
    TreeNode* s = NULL;
    
    void recoverTree(TreeNode* root) {
        recur(root);
        
        auto tmp = f->val;
        f->val = s->val;
        s->val = tmp;
    }
    
    void recur(TreeNode* root){
        if (root == NULL) return;
        recur(root->left);
        
        if(prev!=NULL && prev->val >= root->val){
            if(f == NULL) f = prev;
            s = root;
        }
        
        prev = root;
        
        recur(root->right);
    }
};